openapi: 3.0.1
info:
  title: Indexes REST API
  description: ''
  contact:
    name: API BRICKS LTD
    url: https://www.coinapi.io
    email: support@apibricks.io
  license:
    name: MIT License
    url: https://github.com/coinapi/coinapi-sdk/blob/master/LICENSE
  version: v1
servers:
  - url: https://rest-api.indexes.coinapi.io
paths:
  /api/metadata/exchanges:
    get:
      tags:
        - Metadata
      summary: List all exchanges
      description: "Get a detailed list of exchanges provided by the system.\r\n            \r\n:::info\r\nProperties of the output are providing aggregated information from across all symbols related to the specific exchange. If you need to calculate your aggregation (e.g., limiting only the particular type of symbols), you should use /v1/symbols endpoint as a data source.\r\n:::"
      parameters:
        - name: filter_exchange_id
          in: query
          description: 'Comma or semicolon delimited exchange identifiers used to filter response. (optional, eg. `BITSTAMP;GEMINI`)'
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY"
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)"
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY"
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)"
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY"
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)"
  }
]
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY"
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)"
  }
]
  '/api/metadata/exchanges/{exchange_id}':
    get:
      tags:
        - Metadata
      summary: List all exchanges by exchange_id
      parameters:
        - name: exchange_id
          in: path
          description: The ID of the exchange.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY"
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)"
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY"
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)"
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY"
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)"
  }
]
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.Exchange'
              examples:
                Example response:
                  value: [
  {
    "exchange_id": "OKCOIN_CNY",
    "website": "https://www.okcoin.cn/",
    "name": "OKCoin CNY"
  },
  {
    "exchange_id": "HUOBI",
    "website": "https://www.huobi.com/",
    "name": "Huobi (HBUS)"
  }
]
  /v1/indexes:
    get:
      tags:
        - Indexes
      summary: List indexes
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexIdentifier'
              examples:
                Sample Index List:
                  value: [
  {
    "id": "IDX_REFRATE_VWAP_BTC"
  },
  {
    "id": "IDX_REFRATE_VWAP_ETH"
  },
  {
    "id": "IDX_REFRATE_VWAP_LTC"
  },
  {
    "id": "IDX_REFRATE_VWAP_XRP"
  },
  {
    "id": "IDX_REFRATE_VWAP_ADA"
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexIdentifier'
              examples:
                Sample Index List:
                  value: [
  {
    "id": "IDX_REFRATE_VWAP_BTC"
  },
  {
    "id": "IDX_REFRATE_VWAP_ETH"
  },
  {
    "id": "IDX_REFRATE_VWAP_LTC"
  },
  {
    "id": "IDX_REFRATE_VWAP_XRP"
  },
  {
    "id": "IDX_REFRATE_VWAP_ADA"
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexIdentifier'
              examples:
                Sample Index List:
                  value: [
  {
    "id": "IDX_REFRATE_VWAP_BTC"
  },
  {
    "id": "IDX_REFRATE_VWAP_ETH"
  },
  {
    "id": "IDX_REFRATE_VWAP_LTC"
  },
  {
    "id": "IDX_REFRATE_VWAP_XRP"
  },
  {
    "id": "IDX_REFRATE_VWAP_ADA"
  }
]
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexIdentifier'
              examples:
                Sample Index List:
                  value: [
  {
    "id": "IDX_REFRATE_VWAP_BTC"
  },
  {
    "id": "IDX_REFRATE_VWAP_ETH"
  },
  {
    "id": "IDX_REFRATE_VWAP_LTC"
  },
  {
    "id": "IDX_REFRATE_VWAP_XRP"
  },
  {
    "id": "IDX_REFRATE_VWAP_ADA"
  }
]
  '/v1/indexes/{index_id}/current':
    get:
      tags:
        - Indexes
      summary: Current Index Value
      parameters:
        - name: index_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Indexes.IndexValue'
              examples:
                Example response:
                  value: {
  "timestamp": "2024-09-01T09:00:00",
  "value": 56787.5997300339
}
            application/json:
              schema:
                $ref: '#/components/schemas/Indexes.IndexValue'
              examples:
                Example response:
                  value: {
  "timestamp": "2024-09-01T09:00:00",
  "value": 56787.5997300339
}
            text/json:
              schema:
                $ref: '#/components/schemas/Indexes.IndexValue'
              examples:
                Example response:
                  value: {
  "timestamp": "2024-09-01T09:00:00",
  "value": 56787.5997300339
}
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Indexes.IndexValue'
              examples:
                Example response:
                  value: {
  "timestamp": "2024-09-01T09:00:00",
  "value": 56787.5997300339
}
  '/v1/indexes/{index_definition_id}/currentSnapshot':
    get:
      tags:
        - Indexes
      summary: Current Index Values for index definition
      parameters:
        - name: index_definition_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
  '/v1/indexes/{index_id}/history':
    get:
      tags:
        - Indexes
      summary: Historical Index Value w/Composition
      parameters:
        - name: index_id
          in: path
          required: true
          schema:
            type: string
        - name: time_start
          in: query
          schema:
            type: string
            format: date-time
        - name: time_end
          in: query
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexValue'
              examples:
                Example response:
                  value: [
  {
    "timestamp": "2024-09-05T11:29:04+00:00",
    "value": 56786.84840020827,
    "composition": []
  },
  {
    "timestamp": "2024-09-05T11:29:03+00:00",
    "value": 56786.84840020827,
    "composition": []
  },
  {
    "timestamp": "2024-09-05T11:29:02+00:00",
    "value": 56786.84840020827,
    "composition": []
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexValue'
              examples:
                Example response:
                  value: [
  {
    "timestamp": "2024-09-05T11:29:04+00:00",
    "value": 56786.84840020827,
    "composition": []
  },
  {
    "timestamp": "2024-09-05T11:29:03+00:00",
    "value": 56786.84840020827,
    "composition": []
  },
  {
    "timestamp": "2024-09-05T11:29:02+00:00",
    "value": 56786.84840020827,
    "composition": []
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexValue'
              examples:
                Example response:
                  value: [
  {
    "timestamp": "2024-09-05T11:29:04+00:00",
    "value": 56786.84840020827,
    "composition": []
  },
  {
    "timestamp": "2024-09-05T11:29:03+00:00",
    "value": 56786.84840020827,
    "composition": []
  },
  {
    "timestamp": "2024-09-05T11:29:02+00:00",
    "value": 56786.84840020827,
    "composition": []
  }
]
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexValue'
              examples:
                Example response:
                  value: [
  {
    "timestamp": "2024-09-05T11:29:04+00:00",
    "value": 56786.84840020827,
    "composition": []
  },
  {
    "timestamp": "2024-09-05T11:29:03+00:00",
    "value": 56786.84840020827,
    "composition": []
  },
  {
    "timestamp": "2024-09-05T11:29:02+00:00",
    "value": 56786.84840020827,
    "composition": []
  }
]
  '/v1/indexes/{index_definition_id}/historySnapshot':
    get:
      tags:
        - Indexes
      summary: Historical Index Values for index definition
      parameters:
        - name: index_definition_id
          in: path
          required: true
          schema:
            type: string
        - name: time
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
  '/v1/indexes/{index_id}/timeseries':
    get:
      tags:
        - Indexes
      summary: Timeseries Index Value
      parameters:
        - name: index_id
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: period_id
          in: query
          description: Identifier of requested timeseries period (e.g. `5SEC` or `1DAY`)
          required: true
          schema:
            type: string
        - name: time_start
          in: query
          description: Timeseries starting time in ISO 8601
          required: true
          schema:
            type: string
        - name: time_end
          in: query
          description: Timeseries ending time in ISO 8601
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: 'Amount of items to return (optional, mininum is 1, maximum is 100000, default value is 100, if the parameter is used then every 100 output items are counted as one request)'
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexTimeseriesItem'
              examples:
                Example response:
                  value: [
  {
    "time_period_start": "2024-09-05T08:00:00+00:00",
    "time_period_end": "2024-09-05T09:00:00+00:00",
    "time_open": "2024-09-05T08:00:44+00:00",
    "time_close": "2024-09-05T08:59:44+00:00",
    "value_open": 57146.1153570673,
    "value_high": 57210.0651836076,
    "value_low": 56950.4558254606,
    "value_close": 56993.5152800002,
    "value_count": 0
  },
  {
    "time_period_start": "2024-09-05T09:00:00+00:00",
    "time_period_end": "2024-09-05T10:00:00+00:00",
    "time_open": "2024-09-05T09:00:44+00:00",
    "time_close": "2024-09-05T09:59:59.9+00:00",
    "value_open": 57000.6574615287,
    "value_high": 57000.6574615287,
    "value_low": 56650.5866347198,
    "value_close": 56787.2920819528,
    "value_count": 0
  },
  {
    "time_period_start": "2024-09-05T10:00:00+00:00",
    "time_period_end": "2024-09-05T11:00:00+00:00",
    "time_open": "2024-09-05T10:00:00+00:00",
    "time_close": "2024-09-05T10:59:59.9+00:00",
    "value_open": 56787.2920819528,
    "value_high": 56788.3686345929,
    "value_low": 56786.7251004355,
    "value_close": 56787.2066526585,
    "value_count": 0
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexTimeseriesItem'
              examples:
                Example response:
                  value: [
  {
    "time_period_start": "2024-09-05T08:00:00+00:00",
    "time_period_end": "2024-09-05T09:00:00+00:00",
    "time_open": "2024-09-05T08:00:44+00:00",
    "time_close": "2024-09-05T08:59:44+00:00",
    "value_open": 57146.1153570673,
    "value_high": 57210.0651836076,
    "value_low": 56950.4558254606,
    "value_close": 56993.5152800002,
    "value_count": 0
  },
  {
    "time_period_start": "2024-09-05T09:00:00+00:00",
    "time_period_end": "2024-09-05T10:00:00+00:00",
    "time_open": "2024-09-05T09:00:44+00:00",
    "time_close": "2024-09-05T09:59:59.9+00:00",
    "value_open": 57000.6574615287,
    "value_high": 57000.6574615287,
    "value_low": 56650.5866347198,
    "value_close": 56787.2920819528,
    "value_count": 0
  },
  {
    "time_period_start": "2024-09-05T10:00:00+00:00",
    "time_period_end": "2024-09-05T11:00:00+00:00",
    "time_open": "2024-09-05T10:00:00+00:00",
    "time_close": "2024-09-05T10:59:59.9+00:00",
    "value_open": 56787.2920819528,
    "value_high": 56788.3686345929,
    "value_low": 56786.7251004355,
    "value_close": 56787.2066526585,
    "value_count": 0
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexTimeseriesItem'
              examples:
                Example response:
                  value: [
  {
    "time_period_start": "2024-09-05T08:00:00+00:00",
    "time_period_end": "2024-09-05T09:00:00+00:00",
    "time_open": "2024-09-05T08:00:44+00:00",
    "time_close": "2024-09-05T08:59:44+00:00",
    "value_open": 57146.1153570673,
    "value_high": 57210.0651836076,
    "value_low": 56950.4558254606,
    "value_close": 56993.5152800002,
    "value_count": 0
  },
  {
    "time_period_start": "2024-09-05T09:00:00+00:00",
    "time_period_end": "2024-09-05T10:00:00+00:00",
    "time_open": "2024-09-05T09:00:44+00:00",
    "time_close": "2024-09-05T09:59:59.9+00:00",
    "value_open": 57000.6574615287,
    "value_high": 57000.6574615287,
    "value_low": 56650.5866347198,
    "value_close": 56787.2920819528,
    "value_count": 0
  },
  {
    "time_period_start": "2024-09-05T10:00:00+00:00",
    "time_period_end": "2024-09-05T11:00:00+00:00",
    "time_open": "2024-09-05T10:00:00+00:00",
    "time_close": "2024-09-05T10:59:59.9+00:00",
    "value_open": 56787.2920819528,
    "value_high": 56788.3686345929,
    "value_low": 56786.7251004355,
    "value_close": 56787.2066526585,
    "value_count": 0
  }
]
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexTimeseriesItem'
              examples:
                Example response:
                  value: [
  {
    "time_period_start": "2024-09-05T08:00:00+00:00",
    "time_period_end": "2024-09-05T09:00:00+00:00",
    "time_open": "2024-09-05T08:00:44+00:00",
    "time_close": "2024-09-05T08:59:44+00:00",
    "value_open": 57146.1153570673,
    "value_high": 57210.0651836076,
    "value_low": 56950.4558254606,
    "value_close": 56993.5152800002,
    "value_count": 0
  },
  {
    "time_period_start": "2024-09-05T09:00:00+00:00",
    "time_period_end": "2024-09-05T10:00:00+00:00",
    "time_open": "2024-09-05T09:00:44+00:00",
    "time_close": "2024-09-05T09:59:59.9+00:00",
    "value_open": 57000.6574615287,
    "value_high": 57000.6574615287,
    "value_low": 56650.5866347198,
    "value_close": 56787.2920819528,
    "value_count": 0
  },
  {
    "time_period_start": "2024-09-05T10:00:00+00:00",
    "time_period_end": "2024-09-05T11:00:00+00:00",
    "time_open": "2024-09-05T10:00:00+00:00",
    "time_close": "2024-09-05T10:59:59.9+00:00",
    "value_open": 56787.2920819528,
    "value_high": 56788.3686345929,
    "value_low": 56786.7251004355,
    "value_close": 56787.2066526585,
    "value_count": 0
  }
]
  /v1/indexdef/multiasset:
    get:
      tags:
        - Indexes
      summary: Get all multi-asset weights
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexMultiAssetWeight'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexMultiAssetWeight'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexMultiAssetWeight'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexMultiAssetWeight'
  '/v1/indexdef/multiasset/{index_id}':
    get:
      tags:
        - Indexes
      summary: Get multi-asset weights for specific index
      parameters:
        - name: index_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexMultiAssetWeight'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexMultiAssetWeight'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexMultiAssetWeight'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexMultiAssetWeight'
  '/v1/indexdef/input-data/{index_definition_id}':
    get:
      tags:
        - Indexes
      summary: Returns data inputs for certain index definition and time
      parameters:
        - name: index_definition_id
          in: path
          required: true
          schema:
            type: string
        - name: time
          in: query
          schema:
            type: string
            format: date-time
        - name: enabled_only
          in: query
          schema:
            type: boolean
            default: false
        - name: pending_only
          in: query
          schema:
            type: boolean
            default: false
        - name: filter_asset_id
          in: query
          schema:
            type: string
        - name: with_status_info
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionSnapshotEntry'
  '/v1/indexdef/input-data/{index_definition_id}/all':
    get:
      tags:
        - Indexes
      summary: Returns all data inputs for a specific index definition
      parameters:
        - name: index_definition_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionInputData'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionInputData'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionInputData'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Indexes.IndexDefinitionInputData'
  /v1/metadata/periods:
    get:
      tags:
        - Periods
      summary: List all periods
      description: "Get full list of supported time periods\r\n            \r\n### Available periods\r\n            \r\nTime unit | Period identifiers\r\n--------- | -----------\r\nSecond | 1SEC, 2SEC, 3SEC, 4SEC, 5SEC, 6SEC, 10SEC, 15SEC, 20SEC, 30SEC\r\nMinute | 1MIN, 2MIN, 3MIN, 4MIN, 5MIN, 6MIN, 10MIN, 15MIN, 20MIN, 30MIN\r\nHour | 1HRS, 2HRS, 3HRS, 4HRS, 6HRS, 8HRS, 12HRS\r\nDay | 1DAY, 2DAY, 3DAY, 5DAY, 7DAY, 10DAY\r\nMonth | 1MTH, 2MTH, 3MTH, 4MTH, 6MTH\r\nYear | 1YRS, 2YRS, 3YRS, 4YRS, 5YRS\r\n            \r\n:::tip\r\nYou can assume that we will not remove any periods from this response, however, we may add new ones.\r\n:::"
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.TimeseriesPeriod'
              examples:
                Example response:
                  value: [
  {
    "period_id": "1SEC",
    "length_seconds": 1,
    "length_months": 0,
    "unit_count": 1,
    "unit_name": "second",
    "display_name": "1 Second"
  },
  {
    "period_id": "10DAY",
    "length_seconds": 864000,
    "length_months": 0,
    "unit_count": 10,
    "unit_name": "day",
    "display_name": "10 Days"
  },
  {
    "period_id": "2YRS",
    "length_seconds": 0,
    "length_months": 24,
    "unit_count": 2,
    "unit_name": "year",
    "display_name": "2 Years"
  }
]
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.TimeseriesPeriod'
              examples:
                Example response:
                  value: [
  {
    "period_id": "1SEC",
    "length_seconds": 1,
    "length_months": 0,
    "unit_count": 1,
    "unit_name": "second",
    "display_name": "1 Second"
  },
  {
    "period_id": "10DAY",
    "length_seconds": 864000,
    "length_months": 0,
    "unit_count": 10,
    "unit_name": "day",
    "display_name": "10 Days"
  },
  {
    "period_id": "2YRS",
    "length_seconds": 0,
    "length_months": 24,
    "unit_count": 2,
    "unit_name": "year",
    "display_name": "2 Years"
  }
]
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.TimeseriesPeriod'
              examples:
                Example response:
                  value: [
  {
    "period_id": "1SEC",
    "length_seconds": 1,
    "length_months": 0,
    "unit_count": 1,
    "unit_name": "second",
    "display_name": "1 Second"
  },
  {
    "period_id": "10DAY",
    "length_seconds": 864000,
    "length_months": 0,
    "unit_count": 10,
    "unit_name": "day",
    "display_name": "10 Days"
  },
  {
    "period_id": "2YRS",
    "length_seconds": 0,
    "length_months": 24,
    "unit_count": 2,
    "unit_name": "year",
    "display_name": "2 Years"
  }
]
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metadata.TimeseriesPeriod'
              examples:
                Example response:
                  value: [
  {
    "period_id": "1SEC",
    "length_seconds": 1,
    "length_months": 0,
    "unit_count": 1,
    "unit_name": "second",
    "display_name": "1 Second"
  },
  {
    "period_id": "10DAY",
    "length_seconds": 864000,
    "length_months": 0,
    "unit_count": 10,
    "unit_name": "day",
    "display_name": "10 Days"
  },
  {
    "period_id": "2YRS",
    "length_seconds": 0,
    "length_months": 24,
    "unit_count": 2,
    "unit_name": "year",
    "display_name": "2 Years"
  }
]
components:
  schemas:
    Indexes.IndexDefinitionInputData:
      type: object
      properties:
        exchangeId:
          type: string
          nullable: true
        exchangeSymbolId:
          type: string
          nullable: true
        baseAssetId:
          type: string
          nullable: true
        quoteAssetId:
          type: string
          nullable: true
        beginDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        status:
          type: string
          nullable: true
        statusInfo:
          type: string
          nullable: true
        lastModificationTime:
          type: string
          format: date-time
      additionalProperties: false
    Indexes.IndexDefinitionSnapshotEntry:
      type: object
      properties:
        index_id:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
        value:
          type: number
          format: double
      additionalProperties: false
    Indexes.IndexIdentifier:
      type: object
      properties:
        id:
          type: string
          description: Index ID
          nullable: true
      additionalProperties: false
      description: Represents an index id
    Indexes.IndexMultiAssetWeight:
      type: object
      properties:
        indexId:
          type: string
          nullable: true
        assetId:
          type: string
          nullable: true
        weight:
          type: number
          format: double
      additionalProperties: false
    Indexes.IndexTimeseriesItem:
      type: object
      properties:
        time_period_start:
          type: string
          description: Gets or sets the start time of the time period.
          format: date-time
        time_period_end:
          type: string
          description: Gets or sets the end time of the time period.
          format: date-time
        time_open:
          type: string
          description: Gets or sets the time when the value opened.
          format: date-time
          nullable: true
        time_close:
          type: string
          description: Gets or sets the time when the value closed.
          format: date-time
          nullable: true
        value_open:
          type: number
          description: Gets or sets the opening value.
          format: double
          nullable: true
        value_high:
          type: number
          description: Gets or sets the highest value during the time period.
          format: double
          nullable: true
        value_low:
          type: number
          description: Gets or sets the lowest value during the time period.
          format: double
          nullable: true
        value_close:
          type: number
          description: Gets or sets the closing value.
          format: double
          nullable: true
        value_count:
          type: integer
          description: Gets or sets the number of values during the time period.
          format: int64
      additionalProperties: false
      description: Represents a timeseries item with value information.
    Indexes.IndexValue:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: number
          format: double
        composition:
          type: array
          items:
            $ref: '#/components/schemas/Indexes.IndexValueComponent'
          nullable: true
      additionalProperties: false
    Indexes.IndexValueComponent:
      type: object
      properties:
        component_id:
          type: string
          nullable: true
        component_value:
          type: number
          format: double
      additionalProperties: false
    Metadata.Exchange:
      type: object
      properties:
        exchange_id:
          type: string
          description: Gets or sets the exchange ID.
          nullable: true
        website:
          type: string
          description: Gets or sets the website URL of the exchange.
          nullable: true
        name:
          type: string
          description: Gets or sets the name of the exchange.
          nullable: true
      additionalProperties: false
      description: Represents an exchange.
    Metadata.TimeseriesPeriod:
      type: object
      properties:
        period_id:
          type: string
          description: Gets or sets the period ID.
          nullable: true
        length_seconds:
          type: integer
          description: Gets or sets the length of the period in seconds.
          format: int32
        length_months:
          type: integer
          description: Gets or sets the length of the period in months.
          format: int32
        unit_count:
          type: integer
          description: Gets or sets the unit count.
          format: int32
          nullable: true
        unit_name:
          type: string
          description: Gets or sets the unit name.
          nullable: true
        display_name:
          type: string
          description: Gets or sets the display name of the timeseries period.
          nullable: true
      additionalProperties: false
      description: Represents a timeseries period used in exchange rate data.
  securitySchemes:
    ApiKey:
      type: apiKey
      description: CoinApi API key needed to access the endpoints
      name: X-CoinAPI-Key
      in: header
security:
  - ApiKey: [ ]
tags:
  - name: Periods
    description: <span data-status-page="28926"></span>
  - name: Metadata
    description: <span data-status-page="28923"></span>
  - name: Period
    description: Controller for periods.